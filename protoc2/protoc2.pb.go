// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protoc2.proto

package protoc2

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type M1_Enum_1 int32

const (
	M1_Enum_1_0 M1_Enum_1 = 0
	M1_Enum_1_1 M1_Enum_1 = 1
	M1_Enum_1_2 M1_Enum_1 = 2
)

var M1_Enum_1_name = map[int32]string{
	0: "Enum_1_0",
	1: "Enum_1_1",
	2: "Enum_1_2",
}

var M1_Enum_1_value = map[string]int32{
	"Enum_1_0": 0,
	"Enum_1_1": 1,
	"Enum_1_2": 2,
}

func (x M1_Enum_1) Enum() *M1_Enum_1 {
	p := new(M1_Enum_1)
	*p = x
	return p
}

func (x M1_Enum_1) String() string {
	return proto.EnumName(M1_Enum_1_name, int32(x))
}

func (x *M1_Enum_1) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(M1_Enum_1_value, data, "M1_Enum_1")
	if err != nil {
		return err
	}
	*x = M1_Enum_1(value)
	return nil
}

func (M1_Enum_1) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_70b0d7505f0127c8, []int{0, 0}
}

type M1 struct {
	Str_1                *string     `protobuf:"bytes,1,opt,name=str_1,json=str1" json:"str_1,omitempty"`
	Bytes_1              []byte      `protobuf:"bytes,2,opt,name=bytes_1,json=bytes1" json:"bytes_1,omitempty"`
	Int32_1              *int32      `protobuf:"varint,3,opt,name=int32_1,json=int321" json:"int32_1,omitempty"`
	Int32_2              *int32      `protobuf:"varint,4,opt,name=int32_2,json=int322" json:"int32_2,omitempty"`
	Uint32_1             *uint32     `protobuf:"varint,5,opt,name=uint32_1,json=uint321" json:"uint32_1,omitempty"`
	Sint32_1             *int32      `protobuf:"zigzag32,6,opt,name=sint32_1,json=sint321" json:"sint32_1,omitempty"`
	Sint32_2             *int32      `protobuf:"zigzag32,7,opt,name=sint32_2,json=sint322" json:"sint32_2,omitempty"`
	Fixed32_1            *uint32     `protobuf:"fixed32,8,opt,name=fixed32_1,json=fixed321" json:"fixed32_1,omitempty"`
	Fixed32_2            *uint32     `protobuf:"fixed32,9,opt,name=fixed32_2,json=fixed322" json:"fixed32_2,omitempty"`
	Sfixed32_1           *int32      `protobuf:"fixed32,10,opt,name=sfixed32_1,json=sfixed321" json:"sfixed32_1,omitempty"`
	Sfixed32_2           *int32      `protobuf:"fixed32,11,opt,name=sfixed32_2,json=sfixed322" json:"sfixed32_2,omitempty"`
	Int64_1              *int64      `protobuf:"varint,12,opt,name=int64_1,json=int641" json:"int64_1,omitempty"`
	Int64_2              *int64      `protobuf:"varint,13,opt,name=int64_2,json=int642" json:"int64_2,omitempty"`
	Uint64_1             *uint64     `protobuf:"varint,14,opt,name=uint64_1,json=uint641" json:"uint64_1,omitempty"`
	Sint64_1             *int64      `protobuf:"zigzag64,15,opt,name=sint64_1,json=sint641" json:"sint64_1,omitempty"`
	Sint64_2             *int64      `protobuf:"zigzag64,16,opt,name=sint64_2,json=sint642" json:"sint64_2,omitempty"`
	Fixed64_1            *uint64     `protobuf:"fixed64,17,opt,name=fixed64_1,json=fixed641" json:"fixed64_1,omitempty"`
	Fixed64_2            *uint64     `protobuf:"fixed64,18,opt,name=fixed64_2,json=fixed642" json:"fixed64_2,omitempty"`
	Sfixed64_1           *int64      `protobuf:"fixed64,19,opt,name=sfixed64_1,json=sfixed641" json:"sfixed64_1,omitempty"`
	Sfixed64_2           *int64      `protobuf:"fixed64,20,opt,name=sfixed64_2,json=sfixed642" json:"sfixed64_2,omitempty"`
	Bool_1               *bool       `protobuf:"varint,21,opt,name=bool_1,json=bool1" json:"bool_1,omitempty"`
	Bool_2               *bool       `protobuf:"varint,22,opt,name=bool_2,json=bool2" json:"bool_2,omitempty"`
	Float_1              *float32    `protobuf:"fixed32,23,opt,name=float_1,json=float1" json:"float_1,omitempty"`
	Float_2              *float32    `protobuf:"fixed32,24,opt,name=float_2,json=float2" json:"float_2,omitempty"`
	Double_1             *float64    `protobuf:"fixed64,25,opt,name=double_1,json=double1" json:"double_1,omitempty"`
	Double_2             *float64    `protobuf:"fixed64,26,opt,name=double_2,json=double2" json:"double_2,omitempty"`
	Enum_1               []M1_Enum_1 `protobuf:"varint,27,rep,name=enum_1,json=enum1,enum=M1_Enum_1" json:"enum_1,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *M1) Reset()         { *m = M1{} }
func (m *M1) String() string { return proto.CompactTextString(m) }
func (*M1) ProtoMessage()    {}
func (*M1) Descriptor() ([]byte, []int) {
	return fileDescriptor_70b0d7505f0127c8, []int{0}
}

func (m *M1) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_M1.Unmarshal(m, b)
}
func (m *M1) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_M1.Marshal(b, m, deterministic)
}
func (m *M1) XXX_Merge(src proto.Message) {
	xxx_messageInfo_M1.Merge(m, src)
}
func (m *M1) XXX_Size() int {
	return xxx_messageInfo_M1.Size(m)
}
func (m *M1) XXX_DiscardUnknown() {
	xxx_messageInfo_M1.DiscardUnknown(m)
}

var xxx_messageInfo_M1 proto.InternalMessageInfo

func (m *M1) GetStr_1() string {
	if m != nil && m.Str_1 != nil {
		return *m.Str_1
	}
	return ""
}

func (m *M1) GetBytes_1() []byte {
	if m != nil {
		return m.Bytes_1
	}
	return nil
}

func (m *M1) GetInt32_1() int32 {
	if m != nil && m.Int32_1 != nil {
		return *m.Int32_1
	}
	return 0
}

func (m *M1) GetInt32_2() int32 {
	if m != nil && m.Int32_2 != nil {
		return *m.Int32_2
	}
	return 0
}

func (m *M1) GetUint32_1() uint32 {
	if m != nil && m.Uint32_1 != nil {
		return *m.Uint32_1
	}
	return 0
}

func (m *M1) GetSint32_1() int32 {
	if m != nil && m.Sint32_1 != nil {
		return *m.Sint32_1
	}
	return 0
}

func (m *M1) GetSint32_2() int32 {
	if m != nil && m.Sint32_2 != nil {
		return *m.Sint32_2
	}
	return 0
}

func (m *M1) GetFixed32_1() uint32 {
	if m != nil && m.Fixed32_1 != nil {
		return *m.Fixed32_1
	}
	return 0
}

func (m *M1) GetFixed32_2() uint32 {
	if m != nil && m.Fixed32_2 != nil {
		return *m.Fixed32_2
	}
	return 0
}

func (m *M1) GetSfixed32_1() int32 {
	if m != nil && m.Sfixed32_1 != nil {
		return *m.Sfixed32_1
	}
	return 0
}

func (m *M1) GetSfixed32_2() int32 {
	if m != nil && m.Sfixed32_2 != nil {
		return *m.Sfixed32_2
	}
	return 0
}

func (m *M1) GetInt64_1() int64 {
	if m != nil && m.Int64_1 != nil {
		return *m.Int64_1
	}
	return 0
}

func (m *M1) GetInt64_2() int64 {
	if m != nil && m.Int64_2 != nil {
		return *m.Int64_2
	}
	return 0
}

func (m *M1) GetUint64_1() uint64 {
	if m != nil && m.Uint64_1 != nil {
		return *m.Uint64_1
	}
	return 0
}

func (m *M1) GetSint64_1() int64 {
	if m != nil && m.Sint64_1 != nil {
		return *m.Sint64_1
	}
	return 0
}

func (m *M1) GetSint64_2() int64 {
	if m != nil && m.Sint64_2 != nil {
		return *m.Sint64_2
	}
	return 0
}

func (m *M1) GetFixed64_1() uint64 {
	if m != nil && m.Fixed64_1 != nil {
		return *m.Fixed64_1
	}
	return 0
}

func (m *M1) GetFixed64_2() uint64 {
	if m != nil && m.Fixed64_2 != nil {
		return *m.Fixed64_2
	}
	return 0
}

func (m *M1) GetSfixed64_1() int64 {
	if m != nil && m.Sfixed64_1 != nil {
		return *m.Sfixed64_1
	}
	return 0
}

func (m *M1) GetSfixed64_2() int64 {
	if m != nil && m.Sfixed64_2 != nil {
		return *m.Sfixed64_2
	}
	return 0
}

func (m *M1) GetBool_1() bool {
	if m != nil && m.Bool_1 != nil {
		return *m.Bool_1
	}
	return false
}

func (m *M1) GetBool_2() bool {
	if m != nil && m.Bool_2 != nil {
		return *m.Bool_2
	}
	return false
}

func (m *M1) GetFloat_1() float32 {
	if m != nil && m.Float_1 != nil {
		return *m.Float_1
	}
	return 0
}

func (m *M1) GetFloat_2() float32 {
	if m != nil && m.Float_2 != nil {
		return *m.Float_2
	}
	return 0
}

func (m *M1) GetDouble_1() float64 {
	if m != nil && m.Double_1 != nil {
		return *m.Double_1
	}
	return 0
}

func (m *M1) GetDouble_2() float64 {
	if m != nil && m.Double_2 != nil {
		return *m.Double_2
	}
	return 0
}

func (m *M1) GetEnum_1() []M1_Enum_1 {
	if m != nil {
		return m.Enum_1
	}
	return nil
}

type M0 struct {
	M1                   []*M1    `protobuf:"bytes,1,rep,name=m1" json:"m1,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *M0) Reset()         { *m = M0{} }
func (m *M0) String() string { return proto.CompactTextString(m) }
func (*M0) ProtoMessage()    {}
func (*M0) Descriptor() ([]byte, []int) {
	return fileDescriptor_70b0d7505f0127c8, []int{1}
}

func (m *M0) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_M0.Unmarshal(m, b)
}
func (m *M0) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_M0.Marshal(b, m, deterministic)
}
func (m *M0) XXX_Merge(src proto.Message) {
	xxx_messageInfo_M0.Merge(m, src)
}
func (m *M0) XXX_Size() int {
	return xxx_messageInfo_M0.Size(m)
}
func (m *M0) XXX_DiscardUnknown() {
	xxx_messageInfo_M0.DiscardUnknown(m)
}

var xxx_messageInfo_M0 proto.InternalMessageInfo

func (m *M0) GetM1() []*M1 {
	if m != nil {
		return m.M1
	}
	return nil
}

func init() {
	proto.RegisterEnum("M1_Enum_1", M1_Enum_1_name, M1_Enum_1_value)
	proto.RegisterType((*M1)(nil), "M1")
	proto.RegisterType((*M0)(nil), "M0")
}

func init() { proto.RegisterFile("protoc2.proto", fileDescriptor_70b0d7505f0127c8) }

var fileDescriptor_70b0d7505f0127c8 = []byte{
	// 409 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0xd3, 0xcf, 0x6a, 0xdb, 0x40,
	0x10, 0x06, 0xf0, 0x8e, 0x64, 0xfd, 0xdb, 0xd8, 0x89, 0xb2, 0x6e, 0x9a, 0x71, 0x43, 0x61, 0xeb,
	0xd3, 0x9c, 0x4c, 0x66, 0x1a, 0xf2, 0x00, 0x85, 0x1e, 0x7d, 0xd9, 0x63, 0x2f, 0x4b, 0xdd, 0x38,
	0x10, 0xb0, 0xad, 0x62, 0xc9, 0xd0, 0x3e, 0x48, 0xdf, 0xb7, 0x68, 0x25, 0x5b, 0x2b, 0x7a, 0xb2,
	0xbf, 0xf9, 0xf1, 0x1d, 0x3e, 0xc1, 0xaa, 0xd9, 0xaf, 0x63, 0xd5, 0x54, 0x3f, 0x65, 0xe5, 0x7f,
	0x97, 0x7f, 0x53, 0x15, 0xad, 0x59, 0xcf, 0x55, 0x52, 0x37, 0x47, 0xc7, 0x08, 0x06, 0xa8, 0xb0,
	0x93, 0xba, 0x39, 0xb2, 0xbe, 0x57, 0xd9, 0xe6, 0x4f, 0xb3, 0xad, 0x1d, 0x63, 0x64, 0x80, 0xa6,
	0x36, 0xf5, 0xd1, 0xc3, 0xdb, 0xa1, 0xf9, 0x22, 0x8e, 0x31, 0x36, 0x40, 0x89, 0x4d, 0x7d, 0x0c,
	0x40, 0x70, 0x12, 0x80, 0xe8, 0x85, 0xca, 0x4f, 0xe7, 0x4a, 0x62, 0x80, 0x66, 0x36, 0x3b, 0xf5,
	0x9d, 0x85, 0xca, 0xeb, 0x33, 0xa5, 0x06, 0xe8, 0xd6, 0x66, 0xf5, 0x7f, 0x24, 0x98, 0x85, 0x24,
	0xfa, 0x41, 0x15, 0xaf, 0x6f, 0xbf, 0xb7, 0x2f, 0xbe, 0x96, 0x1b, 0xa0, 0xcc, 0xe6, 0xfd, 0x81,
	0x43, 0x14, 0x2c, 0x46, 0x28, 0xfa, 0x93, 0x52, 0xf5, 0x50, 0x55, 0x06, 0xe8, 0xc6, 0x16, 0xf5,
	0xa5, 0x1b, 0xb2, 0xe0, 0xd5, 0x98, 0xa5, 0x5f, 0xf8, 0xfc, 0xe4, 0x18, 0xa7, 0x06, 0x28, 0xf6,
	0x0b, 0x9f, 0x9f, 0x78, 0x00, 0xc1, 0x59, 0x00, 0x97, 0xe9, 0xbe, 0x72, 0x6d, 0x80, 0x26, 0xdd,
	0xf4, 0xb6, 0xd3, 0xef, 0xf3, 0x74, 0x63, 0x80, 0x74, 0xb7, 0x6f, 0x4c, 0x82, 0x65, 0x48, 0xc3,
	0x74, 0x5f, 0xbb, 0x35, 0x40, 0x69, 0xbf, 0xae, 0xed, 0x05, 0x28, 0xa8, 0x47, 0x18, 0x4c, 0xf7,
	0xd5, 0xb9, 0x01, 0x2a, 0xcf, 0xdb, 0xda, 0x6e, 0xc8, 0x82, 0xef, 0xc7, 0x2c, 0xfa, 0x4e, 0xa5,
	0x9b, 0xaa, 0xda, 0x39, 0xc6, 0x3b, 0x03, 0x94, 0xdb, 0xa4, 0x4d, 0x7c, 0x39, 0x0b, 0x7e, 0x18,
	0xce, 0xfe, 0x43, 0xbd, 0xee, 0xaa, 0x1f, 0x8d, 0x63, 0xbc, 0x37, 0x40, 0x91, 0x4d, 0x7d, 0xe4,
	0x01, 0x04, 0x31, 0x00, 0xff, 0xa1, 0x5e, 0xaa, 0xd3, 0x66, 0xb7, 0x75, 0x8c, 0x0b, 0x03, 0x04,
	0x36, 0xeb, 0x32, 0x07, 0x24, 0xf8, 0x31, 0x24, 0xd1, 0x9f, 0x55, 0xba, 0x3d, 0x9c, 0xf6, 0x8e,
	0xf1, 0xc1, 0xc4, 0x74, 0x2d, 0x6a, 0xb5, 0xe6, 0xd5, 0x37, 0x7f, 0xb1, 0x49, 0x2b, 0xbc, 0x14,
	0x95, 0x76, 0x07, 0x3d, 0x55, 0x79, 0xf7, 0xcf, 0x3d, 0x96, 0xef, 0x82, 0xc4, 0x25, 0x04, 0x49,
	0xca, 0x68, 0xb9, 0x50, 0xd1, 0xfa, 0x51, 0xcf, 0x55, 0xb4, 0x6f, 0xdf, 0x44, 0x4c, 0x57, 0x12,
	0xaf, 0xd6, 0x6c, 0xa3, 0x3d, 0x7f, 0x2d, 0xbe, 0x67, 0xfd, 0x1b, 0xfa, 0x17, 0x00, 0x00, 0xff,
	0xff, 0x93, 0xb8, 0x8a, 0xa3, 0x4d, 0x03, 0x00, 0x00,
}
